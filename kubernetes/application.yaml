apiVersion: v1
kind: Namespace
metadata:
  name: student-api

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: student-api
data:
  DATABASE_HOST: postgres-db
  DATABASE_PORT: "5432"
  DATABASE_NAME: postgres
  DATABASE_USERNAME: obusor

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: migrations-config
  namespace: student-api
data:
  001_initial.sql: |
    CREATE TABLE "public"."students" (
      "ID" int4 NOT NULL DEFAULT nextval('id_seq'::regclass),
      "name" varchar(255),
      "description" varchar(255),
      PRIMARY KEY ("ID")
    );
---

apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: student-api
type: Opaque
data:
  DATABASE_PASSWORD: cGFzc3dvcmQ=

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: student-api
spec:
  selector:
    matchLabels:
      app: student-app
  template:
    metadata:
      labels:
        app: student-app
    spec:
      nodeSelector:
        type: application
      containers:
      - name: my-app-container
        image: obusorezekiel/gin-gorm-crud:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8888
        env:
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: DATABASE_HOST
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: DATABASE_PORT
          - name: DATABASE_NAME
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: DATABASE_NAME
          - name: DATABASE_USERNAME
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: DATABASE_USERNAME
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secrets
                key: DATABASE_PASSWORD
      initContainers:
      - name: migrate
        image: obusorezekiel/db-migration:latest
        command: ["migrate", "-path=/migrations", "-database=postgres://obusor:password@postgres-db:5432/postgres?sslmode=disable", "up"]
      #   volumeMounts:
      #   - name: migrations
      #     mountPath: /migrations
      # volumes:
      # - name: migrations
      #   configMap:
      #     name: migrations-config

---

apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: student-api
spec:
  selector:
    app: student-app
  ports:
  - port: 80
    targetPort: 8888
  type: LoadBalancer






